<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nginx配置---启用gzip压缩</title>
      <link href="/2020-12-13-nginx-pei-zhi-qi-yong-gzip-ya-suo.html"/>
      <url>/2020-12-13-nginx-pei-zhi-qi-yong-gzip-ya-suo.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、开发环境"><a href="#一、开发环境" class="headerlink" title="一、开发环境"></a>一、开发环境</h3><ul><li>版本： nginx/1.16.1。</li></ul><h3 id="二、配置实现"><a href="#二、配置实现" class="headerlink" title="二、配置实现"></a>二、配置实现</h3><p>参数详解：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启或关闭gzip模块（实时压缩输出）</span><span class="token function">gzip</span> on<span class="token operator">|</span>off<span class="token punctuation">;</span>     <span class="token comment"># 开启或关闭gzip静态文件处理模块（提前压缩，需要nginx中添加上http_gzip_static_module模块）</span>gzip_static on<span class="token operator">|</span>off<span class="token punctuation">;</span><span class="token comment"># 设置压缩缓冲区大小，例如"gizp_buffers 4 8k"就是设置为4个8k内存作为压缩结果数据流缓存</span>gzip_buffers number size<span class="token punctuation">;</span>      <span class="token comment"># 设置允许压缩的页面最小字节数; 页面字节数从header头中的Content-Length中进行获取，建议设置成大于1k，小于1k没有压缩的必要. </span>gzip_min_length length<span class="token punctuation">;</span>         <span class="token comment"># 识别http的协议版本。可以不用配置。</span>gzip_http_version <span class="token number">1.0</span><span class="token operator">|</span><span class="token number">1.1</span><span class="token punctuation">;</span><span class="token comment"># 设置压缩比，可以是0到9中的任一个，级别越高，压缩结果就越小，但同时消耗CPU资源越高，一般折中取6</span>gzip_comp_level <span class="token punctuation">[</span><span class="token number">1</span>-9<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment"># 设置需要压缩的MIME类型，如果不在设置类型范围内的请求不进行压缩，线上配置时尽可能配置多的压缩类型。</span><span class="token function">gzip</span> types mime-type <span class="token punctuation">[</span>mime-type <span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment"># Nginx作为反向代理的时候启用，开启或者关闭后端服务器返回的结果，匹配的前提是后端服务器必须要返回包含"Via"的 header头。</span>gzip_proxied <span class="token punctuation">[</span>off<span class="token operator">|</span>expired<span class="token operator">|</span>no-cache<span class="token operator">|</span>no-store<span class="token operator">|</span>private<span class="token operator">|</span>no_last_modified<span class="token operator">|</span>no_etag<span class="token operator">|</span>auth<span class="token operator">|</span>any<span class="token punctuation">]</span><span class="token comment"># 配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）</span>gzip_disable <span class="token string">"MSIE [1-6]\."</span><span class="token punctuation">;</span><span class="token comment"># 增加vary头</span>gzip_vary on<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>线上配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http <span class="token punctuation">&#123;</span>    <span class="token punctuation">..</span>.        <span class="token comment"># gizp压缩配置</span>    <span class="token function">gzip</span> on<span class="token punctuation">;</span>    gzip_min_length 1k<span class="token punctuation">;</span>    gzip_buffers <span class="token number">4</span> 8k<span class="token punctuation">;</span>    gzip_http_version <span class="token number">1.1</span><span class="token punctuation">;</span>    gzip_comp_level <span class="token number">6</span><span class="token punctuation">;</span>    gzip_types text/plain qpplication/x-javascript text/css application/xml text/javascript application/javascript application/json<span class="token punctuation">;</span>    gzip_disable <span class="token string">"MSIE [1-6]"</span><span class="token punctuation">;</span>    gzip_vary on<span class="token punctuation">;</span>        <span class="token punctuation">..</span>.<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h3><p>未启用gzip时，网站资源访问速度：<br><img src="https://note.youdao.com/yws/api/personal/file/WEBcfa2e5ef98f92e47587cb10bcd36a65d?method=download&shareKey=bdeff67369d6b02e4604fa7c2e670e55" alt="image"></p><p>启用gizp后：<br><img src="https://note.youdao.com/yws/api/personal/file/WEB93a8f32075283b4c36ec56a8dfd1c92c?method=download&shareKey=5e9be38f76768495e915a391db5e2038" alt="image"></p><h3 id="四、参考文档"><a href="#四、参考文档" class="headerlink" title="四、参考文档"></a>四、参考文档</h3><p><a href="https://www.nginx.cn/doc/standard/httpgzip.html">1.Nginx中文文档–HttpGzip模块</a><br><a href="https://cloud.tencent.com/developer/article/1374023">2.Nginx性能优化功能- Gzip压缩(大幅度提高页面加载速度)</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
          <category> 开发配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Gzip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置---同一端口下部署不同项目</title>
      <link href="/2020-12-12-nginx-pei-zhi-tong-yi-duan-kou-xia-bu-shu-bu-tong-xiang-mu.html"/>
      <url>/2020-12-12-nginx-pei-zhi-tong-yi-duan-kou-xia-bu-shu-bu-tong-xiang-mu.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、功能描述"><a href="#一、功能描述" class="headerlink" title="一、功能描述"></a>一、功能描述</h3><ul><li>实现： 在同一端口下部署一个react项目和一个vue项目，通过访问<code>/</code>或<code>/home</code>来访问vue项目，通过访问<code>/portfolio</code>路径来访问react项目。</li><li>版本： <code>nginx/1.16.1</code>、<code>react/16.13.1</code>、<code>react-router-dom/5.2.0</code>、<code>vue/2.6.11</code>、<code>vue-router/3.4.9</code>。</li></ul><h3 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h3><h4 id="1-react项目配置"><a href="#1-react项目配置" class="headerlink" title="1.react项目配置"></a>1.react项目配置</h4><ol><li><code>package.json</code>中增加配置<code>homepage</code>字段，以域名<code>www.abc.cn</code>为例:</li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"homepage"</span><span class="token operator">:</span> <span class="token string">"https://www.abc.cn/portfolio"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>BroserRouter</code>中配置<code>basename</code>属性</li></ol><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 其他引入项省略</span><span class="token comment">// 引入路由组件</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>    BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span>    Switch<span class="token punctuation">,</span>    Route<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token comment">// 增加basename属性</span>        <span class="token operator">&lt;</span>Router basename<span class="token operator">=</span><span class="token string">"/portfolio"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">&#123;</span>styles<span class="token punctuation">.</span>app<span class="token punctuation">&#125;</span><span class="token operator">></span>                <span class="token operator">&lt;</span>LeftNav <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">&#123;</span>styles<span class="token punctuation">.</span>content<span class="token punctuation">&#125;</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>Switch<span class="token operator">></span>                        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/:routerid"</span> exact<span class="token operator">></span>                            <span class="token operator">&lt;</span>DemoList <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>                        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/:routerid/:demo"</span> exact<span class="token operator">></span>                            <span class="token operator">&lt;</span>DemoDetail <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>                        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/"</span> exact<span class="token operator">></span>                            <span class="token operator">&lt;</span>Home <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>Switch<span class="token operator">></span>                    <span class="token operator">&lt;</span>CopyRight <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> App<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-vue项目配置"><a href="#2-vue项目配置" class="headerlink" title="2.vue项目配置"></a>2.vue项目配置</h4><ol><li><code>router</code>中配置基础路径</li></ol><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>  base<span class="token operator">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span> <span class="token comment">//基础路径</span>  routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>vue.config.js</code>（项目中没有该文件的，可以在项目根目录下创建）中配置基础路径</li></ol><pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  publicPath<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span>    <span class="token operator">?</span> <span class="token string">'/home'</span>    <span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>    <span class="token comment">// 其他配置内容省略</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-Nginx配置"><a href="#3-Nginx配置" class="headerlink" title="3.Nginx配置"></a>3.Nginx配置</h4><p><code>nginx.conf</code>中相关配置（我的nginx页面根目录为<code>/data/www</code>，vue项目部署在<code>/data/www/home</code>目录下，react项目部署在<code>/data/www/portfolio</code>目录下）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">&#123;</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  <span class="token operator">&lt;</span>your_server_name<span class="token operator">></span><span class="token punctuation">;</span>    root /data/www<span class="token punctuation">;</span>    <span class="token comment"># Load configuration files for the default server block.</span>    include /etc/nginx/default.d/*.conf<span class="token punctuation">;</span>    <span class="token comment"># http to https</span>    <span class="token builtin class-name">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>    <span class="token comment"># /重定向到/home</span>    location / <span class="token punctuation">&#123;</span>            rewrite / /home permanent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    location /home <span class="token punctuation">&#123;</span>            index index.html index.htm<span class="token punctuation">;</span>            try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /home/index.html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    location /portfolio <span class="token punctuation">&#123;</span>            index index.html index.htm<span class="token punctuation">;</span>            try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /portfolio/index.html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /404.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment"># 如果没有配置ssl或者不使用https可以忽略下列配置</span>server <span class="token punctuation">&#123;</span>    listen       <span class="token number">443</span> ssl<span class="token punctuation">;</span>    server_name  <span class="token operator">&lt;</span>your_server_name<span class="token operator">></span><span class="token punctuation">;</span>    root         /data/www<span class="token punctuation">;</span>    <span class="token comment"># ssl证书相关配置</span>    ssl_certificate <span class="token string">"/etc/nginx/cert/server.crt"</span><span class="token punctuation">;</span>    ssl_certificate_key <span class="token string">"/etc/nginx/cert/server.key"</span><span class="token punctuation">;</span>    ssl_session_cache shared:SSL:1m<span class="token punctuation">;</span>    ssl_session_timeout  5m<span class="token punctuation">;</span>    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5:<span class="token operator">!</span>RC4:<span class="token operator">!</span>DHE<span class="token punctuation">;</span>    ssl_prefer_server_ciphers on<span class="token punctuation">;</span>    <span class="token comment"># Load configuration files for the default server block.</span>    include /etc/nginx/default.d/*.conf<span class="token punctuation">;</span>    location / <span class="token punctuation">&#123;</span>            rewrite / /home permanent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    location /home <span class="token punctuation">&#123;</span>            index index.html index.htm<span class="token punctuation">;</span>            try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /home/inex.html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    location /portfolio <span class="token punctuation">&#123;</span>            index index.html index.htm<span class="token punctuation">;</span>            try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /portfolio/index.html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /404.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、问题解决"><a href="#三、问题解决" class="headerlink" title="三、问题解决"></a>三、问题解决</h3><p>如上将两个项目部署在二级目录后，react项目下的子路由可以正常访问，且刷新访问也正常。vue项目的子路由通过<code>&lt;router-link&gt;&lt;/router-link&gt;</code>组件可以正常访问，但是刷新后会报“500 Internal Server Error”，可以通过下面方式解决。<br>修改nginx.conf中部分配置： </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">location /home <span class="token punctuation">&#123;</span>        index index.html index.htm<span class="token punctuation">;</span>        try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ @router<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>location @router <span class="token punctuation">&#123;</span>        rewrite ^.*$ /home/index.html last<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、最终效果"><a href="#四、最终效果" class="headerlink" title="四、最终效果"></a>四、最终效果</h3><p><a href="https://www.yes-i-do.cn/">vue项目</a><br><a href="https://www.yes-i-do.cn/portfolio">react项目</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
          <category> 开发配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Vue </tag>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置---解决History路由报错问题</title>
      <link href="/2020-12-11-nginx-pei-zhi-jie-jue-history-lu-you-bao-cuo-wen-ti.html"/>
      <url>/2020-12-11-nginx-pei-zhi-jie-jue-history-lu-you-bao-cuo-wen-ti.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、功能描述"><a href="#一、功能描述" class="headerlink" title="一、功能描述"></a>一、功能描述</h3><ul><li><strong>实现</strong>：<ul><li> vue项目中使用<code>history</code>模式的路由时，解决访问深层级的路由返回404的问题。</li><li> nginx配置了ssl证书的情况下，解决<code>history</code>路由刷新报404的问题。</li></ul></li><li><strong>版本</strong>：nginx/1.16.1。</li></ul><h3 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h3><p><code>nginx.conf</code>中相关配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">&#123;</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  <span class="token operator">&lt;</span>your-server-name<span class="token operator">></span><span class="token punctuation">;</span>    <span class="token comment"># http 转成 https，配置了ssl证书时启用</span>    <span class="token builtin class-name">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>    <span class="token comment"># 解决history路由刷新问题</span>    location / <span class="token punctuation">&#123;</span>        <span class="token comment"># index.html文件在服务器中的存储目录</span>        root /data/www<span class="token punctuation">;</span>  <span class="token comment"># /data/www需要修改为你服务器中的目录</span>        index index.html index.htm<span class="token punctuation">;</span>                <span class="token comment">#资源访问失败后定向到index.html</span>        try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /404.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment"># SSL证书配置</span>server <span class="token punctuation">&#123;</span>    listen       <span class="token number">443</span> ssl<span class="token punctuation">;</span>    server_name  <span class="token operator">&lt;</span>your-server-name<span class="token operator">></span><span class="token punctuation">;</span>    ssl_certificate <span class="token operator">&lt;</span>your_ssl_certificate_filepath<span class="token operator">></span><span class="token punctuation">;</span>    ssl_certificate_key <span class="token operator">&lt;</span>your_ssl_certificate_key_filepath<span class="token operator">></span><span class="token punctuation">;</span>    ssl_session_cache shared:SSL:1m<span class="token punctuation">;</span>    ssl_session_timeout  5m<span class="token punctuation">;</span>    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5:<span class="token operator">!</span>RC4:<span class="token operator">!</span>DHE<span class="token punctuation">;</span>    ssl_prefer_server_ciphers on<span class="token punctuation">;</span>    <span class="token comment"># 解决http转https后路由报错问题</span>    location / <span class="token punctuation">&#123;</span>        root /data/www<span class="token punctuation">;</span>        index index.html index.htm<span class="token punctuation">;</span>        try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /404.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h3><p><a href="https://www.yes-i-do.cn/example">demo地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
          <category> 开发配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> History </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCSS常用语法总结</title>
      <link href="/2020-06-03-scss-chang-yong-yu-fa-zong-jie.html"/>
      <url>/2020-06-03-scss-chang-yong-yu-fa-zong-jie.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、CSS扩展"><a href="#一、CSS扩展" class="headerlink" title="一、CSS扩展"></a><span id="cate1">一、CSS扩展</span></h3><h4 id="嵌套规则"><a href="#嵌套规则" class="headerlink" title="嵌套规则"></a><span id="cate1_1">嵌套规则</span></h4><p>为了避免像CSS那样重复输入父选择器，SCSS允许代码CSS样式嵌套，内层的样式将其外层的选择器作为父选择器。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">.home </span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token selector">.header </span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：  </p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.home</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.home .header</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="父选择器-amp"><a href="#父选择器-amp" class="headerlink" title="父选择器&amp;"></a><span id="cate1_2">父选择器<code>&amp;</code></span></h4><p>可以用 <code>&amp;</code> 代表嵌套规则外层的父选择器，编译后的CSS文件中<code>&amp;</code>会被替换为外层的父选择器。  </p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">a </span><span class="token punctuation">&#123;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment">// 示例1：伪类</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">&#123;</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 示例2</span>    <span class="token selector">.header <span class="token parent important">&amp;</span> </span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #f00<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 示例3：拼接后缀（&amp;必须放在首位）</span>    <span class="token selector"><span class="token parent important">&amp;</span>-green </span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #0f0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">a</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.header a</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #f00<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a-green</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #0f0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="属性嵌套"><a href="#属性嵌套" class="headerlink" title="属性嵌套"></a><span id="cate1_3">属性嵌套</span></h4><p>像background、font、border、outline这些复合属性，都是具有多个单属性的。在可能仅需要个别单属性的情况下，可以使用属性嵌套来简化代码。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">.box </span><span class="token punctuation">&#123;</span>  <span class="token selector">border: </span><span class="token punctuation">&#123;</span>    <span class="token property">style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="占位符选择器"><a href="#占位符选择器" class="headerlink" title="占位符选择器%"></a><span id="cate1_4">占位符选择器<code>%</code></span></h4><p>单独使用占位符选择器时（未通过@extend调用），不会被编译到CSS中，仅当<code>@extend</code>指令调用，样式才会被编译到CSS中。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">#context a<span class="token placeholder">%extreme</span> </span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 仅当使用了下列代码，scss才会编译出对应的css</span><span class="token selector">.notice </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@extend</span> <span class="token placeholder selector">%extreme</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#context a.notice</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、注释"><a href="#二、注释" class="headerlink" title="二、注释"></a><span id="cate2">二、注释</span></h3><p>多行注释<code>/* */</code>（会被编译到CSS文件中）</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token comment">/*  *This comment is * several lines long. * since it uses the CSS comment syntax, * it will appear in the CSS output. */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>单行注释<code>//</code>（不会被编译到CSS文件中）</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token comment">// These comments are only one line long each.</span><span class="token comment">// They won't appear in the CSS output.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="三、SassScript"><a href="#三、SassScript" class="headerlink" title="三、SassScript"></a><span id="cate3">三、SassScript</span></h3><h4 id="变量"><a href="#变量" class="headerlink" title="变量$"></a><span id="cate3_1">变量<code>$</code></span></h4><p>变量以<code>$</code>开头，赋值方法与CSS写法一样。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token comment">// 全局变量</span><span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token selector">.header </span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.content </span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box1 </span><span class="token punctuation">&#123;</span>    <span class="token comment">// 局部变量，只能在该嵌套内部使用</span>    <span class="token property"><span class="token variable">$width</span></span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token comment">// 局部变量转换为全局变量</span>    <span class="token property"><span class="token variable">$size</span></span><span class="token punctuation">:</span> 15px !global<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>        <span class="token selector">.inner </span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.box2 </span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$size</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a><span id="cate3_2">数据类型</span></h4><p>支持的数据类型有：</p><ul><li>数字，<code>1, 2, 13, 10px</code></li><li>字符串，有引号和无引号，<code>&quot;foo&quot;, &#39;bar&#39;, baz</code></li><li>颜色，<code>blue, #ff0000, rgba(0,0,0,0.5)</code></li><li>布尔值，<code>true, false</code></li><li>空值, <code>null</code></li><li>数组，用空格或逗号做分隔符，<code>1.5em 1em 2em, Arial, sans-serif</code></li><li>maps, 相当于js中的Object，<code>(key1: value1, key2: value2)</code></li></ul><h4 id="运算"><a href="#运算" class="headerlink" title="运算"></a><span id="cate3_3">运算</span></h4><p>每种数据类型都支持相等运算<code>==</code>和<code>!=</code>，此外，每种数据类型也有其格子支持的运算方式。  </p><ul><li>数字运算<br>支持加、减、乘、除、取余等运算、关系运算（&lt;,&gt;,&lt;=,&gt;=）</li></ul><ul><li>颜色值运算   </li></ul><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">p </span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #432542 <span class="token operator">+</span> #78de1c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a </span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #010203 <span class="token operator">*</span> 2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #bbff5e<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #020406<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>字符串运算</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">p:before </span><span class="token punctuation">&#123;</span>    <span class="token comment">// +号左侧为有引号的字符串，编译的结果为有引号的字符串</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"Foo "</span> <span class="token operator">+</span> Bar<span class="token punctuation">;</span>        <span class="token comment">// +号左侧为无引号的字符串，编译的结果为无引号的字符串</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> sans- <span class="token operator">+</span> <span class="token string">"serif"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"Foo Bar"</span><span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>布尔值运算<br>支持<code>and</code>、<code>or</code>以及<code>not</code>运算</p></li><li><p>数组（List）运算<br>不支持任何运算方式，只能使用list functions控制。</p></li></ul><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a><span id="cate3_4">函数</span></h4><p>详细用法参见<a href="https://sass-lang.com/documentation/modules">Sass函数列表</a>  </p><h3 id="四、-Rules与指令"><a href="#四、-Rules与指令" class="headerlink" title="四、@-Rules与指令"></a><span id="cate4">四、@-Rules与指令</span></h3><h4 id="import"><a href="#import" class="headerlink" title="@import"></a><span id="cate4_1">@import</span></h4><p>使用@import可以的导入SCSS或Sass文件，被导入的文件将合并编译到同一个CSS文件中。被导入的文件中包含的变量或混合指令都可以在导入的文件中使用。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token comment">// 导入单个文件（带扩展名）</span><span class="token keyword">@import</span> <span class="token string">'foo.scss'</span><span class="token punctuation">;</span><span class="token comment">// 导入单个文件（不带扩展名，会尝试寻找扩展名为.scss或.sass的文件）</span><span class="token keyword">@import</span> <span class="token string">'foo'</span><span class="token punctuation">;</span><span class="token comment">// 同时导入多个文件</span><span class="token keyword">@import</span> <span class="token string">'rounded-corners'</span><span class="token punctuation">,</span> <span class="token string">'text-shadow'</span><span class="token punctuation">;</span><span class="token comment">// 一般导入都是不会在嵌套规则内，但是在嵌套规则内导入也是支持的</span><span class="token comment">// 但是这样编译的样式也是会在嵌套内的</span><span class="token selector">#main </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@import</span> <span class="token string">"example"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="extend"><a href="#extend" class="headerlink" title="@extend"></a><span id="cate4_2">@extend</span></h4><p><code>@extend</code>用于将一个选择器下的所有样式继承给另一个选择器。  </p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">.error </span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px #f00<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fdd<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.seriousError </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@extend</span> .error<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、控制指令"><a href="#五、控制指令" class="headerlink" title="五、控制指令"></a><span id="cate5">五、控制指令</span></h3><h4 id="if"><a href="#if" class="headerlink" title="@if"></a><span id="cate5_1">@if</span></h4><p>当<code>@if</code>的表达式返回值不是<code>false</code>或者<code>null</code>时，条件成立，输出<code>&#123;&#125; </code>内的代码：</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">p </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@if</span> <span class="token selector">1 + 1 == 2 </span><span class="token punctuation">&#123;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>     <span class="token keyword">@if</span> <span class="token selector">null  </span><span class="token punctuation">&#123;</span> <span class="token property">border</span><span class="token punctuation">:</span> 3px double blue<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>编译为：  </p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p</span> <span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>类似<code>if...else if...else...</code>语句，<code>@if</code>也支持<code>@else if</code>和<code>@else</code>。  </p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token property"><span class="token variable">$type</span></span><span class="token punctuation">:</span> A<span class="token punctuation">;</span><span class="token selector">p </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$type</span> == A </span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">@else if</span> <span class="token selector"><span class="token variable">$type</span> == B </span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">@else</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="for"><a href="#for" class="headerlink" title="@for"></a><span id="cate5_2">@for</span></h4><p>语法格式1：<code>@for $var from &lt;start&gt; through &lt;end&gt;</code><br>语法格式2：<code>@for $var from &lt;start&gt; to &lt;end&gt;</code><br><code>&lt;start&gt;</code>和<code>&lt;end&gt;</code>必须是整数；使用<code>to</code>时，遍历范围不包含<code>&lt;end&gt;</code></p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 1 <span class="token keyword">through</span> <span class="token selector">3 </span><span class="token punctuation">&#123;</span>    <span class="token selector">.item-<span class="token variable">#&#123;$i&#125;</span> </span><span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 2em <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="each"><a href="#each" class="headerlink" title="@each"></a><span id="cate5_3">@each</span></h4><p>语法格式：<code>@each $var in &lt;list&gt;</code>  </p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$animal</span> in puma, sea-slug, egret, salamander </span><span class="token punctuation">&#123;</span>    <span class="token selector">.<span class="token variable">#&#123;$animal&#125;</span>-icon </span><span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">'/images/#&#123;$animal&#125;.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="while"><a href="#while" class="headerlink" title="@while"></a><span id="cate5_4">@while</span></h4><p>指令重复输出格式直到表达式返回结果为<code>false</code>。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token property"><span class="token variable">$i</span></span><span class="token punctuation">:</span> 6<span class="token punctuation">;</span><span class="token keyword">@while</span> <span class="token selector"><span class="token variable">$i</span> > 0 </span><span class="token punctuation">&#123;</span>    <span class="token selector">.item-<span class="token variable">#&#123;$i&#125;</span> </span><span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 2em <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token property"><span class="token variable">$i</span></span><span class="token punctuation">:</span> <span class="token variable">$i</span> <span class="token operator">-</span> 2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="六、mixin指令"><a href="#六、mixin指令" class="headerlink" title="六、mixin指令"></a><span id="cate6">六、mixin指令</span></h3><p>简单总结，详细用法参考文档。</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token comment">// 定义</span><span class="token keyword">@mixin</span> <span class="token selector">large-text </span><span class="token punctuation">&#123;</span>    <span class="token selector">font: </span><span class="token punctuation">&#123;</span>        <span class="token property">family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span>        <span class="token property">size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 引用混合样式（使用@include）</span><span class="token selector">.page-title </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@include</span><span class="token punctuation">:</span> large-text<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 定义（带参数）</span><span class="token keyword">@mixin</span> <span class="token function">large-text</span><span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token selector">font: </span><span class="token punctuation">&#123;</span>        <span class="token property">family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span>        <span class="token property">size</span><span class="token punctuation">:</span> <span class="token variable">$size</span><span class="token punctuation">;</span>        <span class="token property">weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 引用（带参数）</span><span class="token selector">.page-title </span><span class="token punctuation">&#123;</span>    <span class="token keyword">@include</span><span class="token punctuation">:</span> <span class="token function">large-text</span><span class="token punctuation">(</span>20px<span class="token punctuation">,</span> red<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="七、参考文档及网站链接"><a href="#七、参考文档及网站链接" class="headerlink" title="七、参考文档及网站链接"></a><span id="refDoc">七、参考文档及网站链接</span></h3><p><a href="https://www.sass.hk/docs/">1. Sass中文文档</a><br><a href="https://sass-lang.com/documentation/modules">2. Sass函数文档</a>   </p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> SCSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>element-ui中el-tree组件节点全展开与全收缩功能实现</title>
      <link href="/2020-05-05-element-ui-zhong-el-tree-zu-jian-jie-dian-quan-zhan-kai-yu-quan-shou-suo-gong-neng-shi-xian.html"/>
      <url>/2020-05-05-element-ui-zhong-el-tree-zu-jian-jie-dian-quan-zhan-kai-yu-quan-shou-suo-gong-neng-shi-xian.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、功能描述"><a href="#一、功能描述" class="headerlink" title="一、功能描述"></a>一、功能描述</h3><ul><li><strong>实现</strong>： element-ui中el-tree组件全部节点的展开与收缩功能。</li><li><strong>版本</strong>： “element-ui”: “^2.3.7”。</li></ul><h3 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h3><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;tree-container&quot;&gt;    &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;onExpand&quot;&gt;&#123;&#123;this.expandAll?&#39;收缩&#39;:&#39;展开&#39;&#125;&#125;所有节点&lt;&#x2F;el-button&gt;    &lt;el-tree :data&#x3D;&quot;data&quot; ref&#x3D;&quot;tree&quot;&gt;&lt;&#x2F;el-tree&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;  export default &#123;    data() &#123;      return &#123;          expandAll: false,        data: [&#123;          label: &#39;一级 1&#39;,          children: [&#123;            label: &#39;二级 1-1&#39;,            children: [&#123;              label: &#39;三级 1-1-1&#39;            &#125;]          &#125;]        &#125;, &#123;          label: &#39;一级 2&#39;,          children: [&#123;            label: &#39;二级 2-1&#39;,            children: [&#123;              label: &#39;三级 2-1-1&#39;            &#125;]          &#125;, &#123;            label: &#39;二级 2-2&#39;,            children: [&#123;              label: &#39;三级 2-2-1&#39;            &#125;]          &#125;]        &#125;]      &#125;;    &#125;,    methods: &#123;      &#x2F;&#x2F; 节点展开      async onExpand () &#123;        try &#123;          await this.$confirm(&#39;确认要展开所有节点?&#39;, &#39;提示&#39;, &#123;            confirmButtonText: &#39;确定&#39;,            cancelButtonText: &#39;取消&#39;,            type: &#39;warning&#39;          &#125;)          this.expandAll &#x3D; !this.expandAll          &#x2F;&#x2F; 改变每个节点的状态          this.changeTreeNodeStatus(this.$refs.tree.store.root)        &#125; catch (e) &#123;          this.$message(&#123;            type: &#39;info&#39;,            message: e &#x3D;&#x3D;&#x3D; &#39;cancel&#39; ? &#39;取消操作&#39; : &#39;操作失败&#39;          &#125;)        &#125;      &#125;,      &#x2F;&#x2F; 改变节点的状态      changeTreeNodeStatus (node) &#123;        node.expanded &#x3D; this.expandAll        for (let i &#x3D; 0; i &lt; node.childNodes.length; i++) &#123;          &#x2F;&#x2F; 改变节点的自身expanded状态          node.childNodes[i].expanded &#x3D; this.expandAll          &#x2F;&#x2F; 遍历子节点          if (node.childNodes[i].childNodes.length &gt; 0) &#123;            this.changeTreeNodeStatus(node.childNodes[i])          &#125;        &#125;      &#125;    &#125;  &#125;;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h3><p><a href="https://www.yes-i-do.cn/home/example/tree">demo地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
          <category> 功能实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> element-ui </tag>
            
            <tag> el-tree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序页面跳转过程的参数传递</title>
      <link href="/2020-05-02-wei-xin-xiao-cheng-xu-ye-mian-tiao-zhuan-guo-cheng-de-can-shu-chuan-di.html"/>
      <url>/2020-05-02-wei-xin-xiao-cheng-xu-ye-mian-tiao-zhuan-guo-cheng-de-can-shu-chuan-di.html</url>
      
        <content type="html"><![CDATA[<h3 id="普通参数"><a href="#普通参数" class="headerlink" title="普通参数"></a>普通参数</h3><h4 id="单个参数"><a href="#单个参数" class="headerlink" title="单个参数"></a>单个参数</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js">wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> url<span class="token operator">:</span> <span class="token string">"../api/getOrderList?orderStatus="</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="多个参数"><a href="#多个参数" class="headerlink" title="多个参数"></a>多个参数</h4><p>多个参数之间使用<code>&amp;</code>分割</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> url<span class="token operator">:</span> <span class="token string">"../api/getOrderList?orderStatus="</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">+</span> <span class="token string">"&amp;psize="</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">+</span><span class="token string">"&amp;pno="</span><span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="传递对象"><a href="#传递对象" class="headerlink" title="传递对象"></a>传递对象</h3><h4 id="对象中不带字符"><a href="#对象中不带字符" class="headerlink" title="对象中不带字符?"></a>对象中不带字符<code>?</code></h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span> orderStatus<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> psize<span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> pno<span class="token operator">:</span><span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> url<span class="token operator">:</span> <span class="token string">"../api/getOrderList?params="</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接收页:  </p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="对象中带"><a href="#对象中带" class="headerlink" title="对象中带?"></a>对象中带<code>?</code></h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    orderStatus<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    psize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    pno<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    picUrl<span class="token operator">:</span> <span class="token string">"https://xxx.com/sources/images/goods/653435.png?x-oss-process=image/resize,m_fill,w_500,h_500/quality,q_90"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> url<span class="token operator">:</span> <span class="token string">"../api/getOrderList?params="</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接收页：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> parms <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> mini-program </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用http-server启动本地服务开发静态页面</title>
      <link href="/2020-05-02-shi-yong-http-server-da-jian-ben-di-fu-wu-qi-kai-fa-jing-tai-ye-mian.html"/>
      <url>/2020-05-02-shi-yong-http-server-da-jian-ben-di-fu-wu-qi-kai-fa-jing-tai-ye-mian.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-安装http-server"><a href="#1-安装http-server" class="headerlink" title="1. 安装http-server"></a>1. 安装<code>http-server</code></h3><p>打开cmd(我自己使用的是git bash)，输入命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> http-server -g  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-进入项目根目录"><a href="#2-进入项目根目录" class="headerlink" title="2. 进入项目根目录"></a>2. 进入项目根目录</h3><p>这里是通过命令行进入到项目文件夹中，windows中也可以在资源管理器中直接进入到项目文件夹后，使用<code>shift+&quot;鼠标右键&quot;</code>,选择<code>在此处打开命令行（PowerShell）窗口</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /d/document/projects/wxCoupon<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-启动http-server"><a href="#3-启动http-server" class="headerlink" title="3. 启动http-server"></a>3. 启动<code>http-server</code></h3><p>在命令行中，接着输入以下命令，启动<code>http-server</code>服务器，默认端口号为<code>8080</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hs -o 或 http-server -open  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-查看效果"><a href="#4-查看效果" class="headerlink" title="4. 查看效果"></a>4. 查看效果</h3><p>正常启动后，会出现以下信息：<br><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/http-server/1610029-20200502203732756-1328964473.png?raw=true"></p><p>此时，在浏览器中访问开发的页面<code>http://127.0.0.1:8080/index.html</code>，同时打开浏览器的开发者工具即可看到浏览器端模拟的开发效果。</p><div align="center"><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/http-server/1610029-20200502203847409-524718308.png?raw=true" width="40%" /></div><p>使用手机（需要和电脑处于同一局域网中）访问<code>http://192.168.31.231:8080/index.html</code>，即可实现真机查看开发效果：</p><div align="center"><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/http-server/1610029-20200502204015576-714963078.png?raw=true" width="40%" /></div><blockquote><p>Tips: 若手机无法访问该网络，查看是否是电脑局域网防火墙没有关闭，将防火墙关闭即可。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
          <category> 开发配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http-server </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React+Webpack项目中使用Iconfont字体图标</title>
      <link href="/2020-05-02-react-webpack-xiang-mu-zhong-shi-yong-iconfont-zi-ti-tu-biao.html"/>
      <url>/2020-05-02-react-webpack-xiang-mu-zhong-shi-yong-iconfont-zi-ti-tu-biao.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、下载字体图标"><a href="#1、下载字体图标" class="headerlink" title="1、下载字体图标"></a>1、下载字体图标</h3><p><a href="https://www.iconfont.cn/" title="Iconfont">Iconfont官网</a>，收藏自己要用的图标到自己的项目下，下载后将文件解压：</p><p><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/iconfont/1610029-20200502154112751-1052215406.png?raw=true"></p><blockquote><p>Tips: 其中<code>demo</code>开头的文件为图标样式示例文件，可以在浏览器中打开，便于使用图标时查看图标名称或编码。可以不放到项目中。</p></blockquote><h3 id="2、项目中导入图标文件"><a href="#2、项目中导入图标文件" class="headerlink" title="2、项目中导入图标文件"></a>2、项目中导入图标文件</h3><p>将所需的字体文件和样式文件复制到项目的静态资源文件夹中：<br><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/iconfont/1610029-20200502154129525-228099742.png?raw=true"></p><h3 id="3、引入图标样式"><a href="#3、引入图标样式" class="headerlink" title="3、引入图标样式"></a>3、引入图标样式</h3><p>在<code>App.js</code>中或者需要使用图标字体样式的组件中引入<code>iconfont.css</code>文件：</p><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token string">'../../style/iconfont/iconfont.css'</span><span class="token punctuation">;</span>  <span class="token comment">// 注意路径不要写错</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、使用图标"><a href="#4、使用图标" class="headerlink" title="4、使用图标"></a>4、使用图标</h3><p>在组件中要使用图标字体的位置，可以通过使用<code>iconfont类</code>或<code>unicode编码</code>来实现图标效果：  </p><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// 使用类名来实现图标效果</span><span class="token comment">// iconfont为iconfont.css文件中定义的类名，必写</span><span class="token comment">// icon-meishi 为iconfont.css文件中要使用的图标类名</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-meishi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>     <span class="token comment">// jsx文件</span><span class="token comment">// 使用unicode来实现图标效果</span><span class="token comment">// iconfont为iconfont.css文件中定义的类名，必写</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">&amp;#xe61c;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>         <span class="token comment">// jsx文件    </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、编译报错"><a href="#5、编译报错" class="headerlink" title="5、编译报错"></a>5、编译报错</h3><p><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/iconfont/1610029-20200502154207285-1011437676.png?raw=true"><br>无法解析处理<code>ttf</code>字体文件，需要安装对应的加载器。</p><h3 id="6、安装file-loader"><a href="#6、安装file-loader" class="headerlink" title="6、安装file-loader"></a>6、安装file-loader</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> file-loader --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>webpack.config.js</code>中配置：<br><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/iconfont/1610029-20200502154224797-637029206.png?raw=true"></p><h3 id="7、最终实现效果"><a href="#7、最终实现效果" class="headerlink" title="7、最终实现效果"></a>7、最终实现效果</h3><p><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/iconfont/1610029-20200502154249813-892010816.png?raw=true"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
          <category> 开发配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Webpack </tag>
            
            <tag> Iconfont </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法总结</title>
      <link href="/2020-04-27-markdown-ji-ben-yu-fa-zong-jie.html"/>
      <url>/2020-04-27-markdown-ji-ben-yu-fa-zong-jie.html</url>
      
        <content type="html"><![CDATA[<h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h3><h4 id="1-段落和换行"><a href="#1-段落和换行" class="headerlink" title="1. 段落和换行"></a>1. 段落和换行</h4><p><strong>语法1：空行换行</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是第一个段落......(这里有一个空行)这是第二个段落......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong><br>段落1…..</p><p>段落2…..</p><p><strong>语法2：硬换行</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是第一个段落....(这里有两个及以上的空格)这是第二个段落....<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>实际效果:</strong><br>这是第一个段落….<br>这是第二个段落….</p><h4 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h4><p>Markdown支持两种样式的标题书写形式：Setext和atx。</p><ul><li><strong>Setext书写形式</strong></li></ul><p><strong>语法：使用=和-来区分标记级别</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important">This is an h1<span class="token punctuation">=============</span></span>    <span class="token title important">this is an h2<span class="token punctuation">-------------</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：<em>其中=和-的长度是任意的</em>  </p><ul><li><strong>atx书写形式</strong></li></ul><p><strong>语法：使用#来区分标题级别（标题和#号之间要加空格）</strong>   </p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span>...<span class="token title important"><span class="token punctuation">######</span> 六级标题</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-块引用"><a href="#3-块引用" class="headerlink" title="3.块引用"></a>3.块引用</h4><p><strong>语法：使用&gt;字符引用段落</strong>  </p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> This is a block quote with tow paragraphs.<span class="token blockquote punctuation">></span> This is the paragraph two.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong>  </p><blockquote><p>This is a block quote with tow paragraphs.</p></blockquote><blockquote><p>This is the paragraph two.</p></blockquote><h4 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h4><ul><li><strong>无序列表</strong></li></ul><p><strong>语法：使用*、+或-后接列表项</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">*</span> yesterday<span class="token list punctuation">*</span> today<span class="token list punctuation">*</span> tomorrow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>等价于：  </p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">+</span> yesterday<span class="token list punctuation">+</span> today<span class="token list punctuation">+</span> tomorrow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>等价于：  </p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> yesterday<span class="token list punctuation">-</span> today<span class="token list punctuation">-</span> tomorrow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong>  </p><ul><li>yesterday</li><li>today</li><li>tomorrow</li></ul><ul><li><strong>有序列表</strong></li></ul><p><strong>语法：使用数字加句号（英文）后接列表项</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Red<span class="token list punctuation">2.</span> Green<span class="token list punctuation">3.</span> Blue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>注：其中的数字序号对实际生成的序号没有影响。</em><br><strong>实际效果：</strong>  </p><ol><li>Red</li><li>Green</li><li>Blue</li></ol><h4 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5.代码块"></a>5.代码块</h4><p><strong>语法：在每一行都缩进4个空格或1个水平制表符</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>注：只有第一个水平制表符或头四个空格会在实际展现时移除，其余的都会在格式中保留下来。</em><br><strong>实际效果：</strong></p><pre><code>&lt;div&gt;    hello world;&lt;/div&gt;</code></pre><h4 id="6-水平线"><a href="#6-水平线" class="headerlink" title="6.水平线"></a>6.水平线</h4><p><strong>语法：一行中只有三个及以上的-、*或_。*和-之间可以有空格。</strong></p><pre class="line-numbers language-none"><code class="language-none">* * ****---___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong></p><hr><h3 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h3><h4 id="1-链接"><a href="#1-链接" class="headerlink" title="1.链接"></a>1.链接</h4><p>Markdown支持两种链接形式：<code>内联</code>和<code>引用</code>。   </p><pre class="line-numbers language-none"><code class="language-none">语法：[链接文本](链接url &quot;标题&quot;) <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实际效果：</p><p>This is an <a href="http://example.com/" title="example网站">example</a></p><p>也可以先给链接配置id，后面统一配置链接地址和连接标题。语法如下：</p><pre class="line-numbers language-none"><code class="language-none">[链接文本1][链接id1][链接文本2][链接id2][id1]: 链接url  &quot;标题&quot;[id2]: 链接url  &quot;标题&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong></p><p>This is the <a href="http://example1.com/" title="example1站点">example1</a>.<br>This is the <a href="http://example2.com/" title="wxample2站点">example2</a>.</p><h4 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h4><p>用单<code>*</code>或单<code>_</code>包裹的文本将会使用<code>&lt;em&gt;</code>标签包裹；用双<code>*</code>或双<code>_</code>包裹的文本将会使用<code>&lt;strong&gt;</code>标签包裹。<br><strong>语法如下：</strong> </p><pre class="line-numbers language-none"><code class="language-none">*重要内容*_重要内容_**更重要的内容**__更重要的内容__<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong></p><p>这里有 <em>重要内容</em>。 </p><p>这里有 <em>重要内容</em></p><p>这里有<strong>更重要的内容</strong>。</p><p>这里有 __更重要的内容__。</p><h4 id="3-代码"><a href="#3-代码" class="headerlink" title="3.代码"></a>3.代码</h4><p><strong>语法：使用重音符号`包裹代码片段。</strong><br><strong>实际效果：</strong></p><p>Use <code>console.log(result)</code> to print the final result.</p><p>如果代码片段中有使用到<code>`</code>符号，可以使用多重<code>`</code>包裹该符号。语法如下：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">我们可以使用<span class="token code-snippet code keyword">`` ` ``</span>符号来插入代码片段。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>实际效果：</strong></p><p>我们可以使用<code>`</code>符号来插入代码片段。</p><h4 id="4-图片"><a href="#4-图片" class="headerlink" title="4.图片"></a>4.图片</h4><p>语法类似于链接。<br><strong>语法：</strong></p><pre class="line-numbers language-none"><code class="language-none">![Alt text](&#x2F;path&#x2F;to&#x2F;img.jpg)![Alt text](&#x2F;path&#x2F;to&#x2F;img.jpg &quot;Optional title&quot;)![Alt text][id][id]: url&#x2F;to&#x2F;image &quot;Optional title&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种方式无法设置图片的尺寸，要设定尺寸可以使用<code>&lt;img&gt;</code>标签。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="1-自动链接"><a href="#1-自动链接" class="headerlink" title="1.自动链接"></a>1.自动链接</h4><p>“自动”创建URL和email地址链接。<br><strong>语法：</strong></p><pre class="line-numbers language-none"><code class="language-none">个人网址：&lt;http:&#x2F;&#x2F;example.com&gt;个人邮箱：&lt;address@example.com&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>实际效果：</strong></p><p>个人网址：<a href="http://example.com/">http://example.com</a><br>个人邮箱：<a href="mailto:&#97;&#x64;&#100;&#114;&#101;&#115;&#115;&#x40;&#101;&#x78;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#97;&#x64;&#100;&#114;&#101;&#115;&#115;&#x40;&#101;&#x78;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a></p><h4 id="2-反斜杠转义"><a href="#2-反斜杠转义" class="headerlink" title="2.反斜杠转义"></a>2.反斜杠转义</h4><p>需要展示一些特殊字符，如果不进行转义，markdown文档会将其视作语法符号。Markdown为下面字符提供反斜杠转义。</p><pre class="line-numbers language-none"><code class="language-none">\  反斜线&#96;  重音符*  星号_  下划线&#123;&#125; 花括号[] 方括号() 圆括号#  井号-  连字符.  句号!  感叹号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>语法：</strong></p><pre class="line-numbers language-none"><code class="language-none">+、\-、\*、&#x2F;是最基本的四则运算。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>实际效果：</strong></p><p>+、-、*、/是最基本的四则运算。</p><h4 id="3-表格"><a href="#3-表格" class="headerlink" title="3.表格"></a>3.表格</h4><p><strong>语法：</strong>  </p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">|</span>标题<span class="token number">1</span><span class="token operator">|</span>标题<span class="token number">2</span><span class="token operator">|</span>标题<span class="token number">3</span><span class="token operator">|</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">|</span><span class="token operator">|</span>文本<span class="token number">1</span><span class="token operator">|</span>文本<span class="token number">2</span><span class="token operator">|</span>文本<span class="token number">3</span><span class="token operator">|</span><span class="token operator">|</span>文本<span class="token number">4</span><span class="token operator">|</span>文本<span class="token number">5</span><span class="token operator">|</span>文本<span class="token number">6</span><span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实际效果：</strong><br>|标题1|标题2|标题3|<br>|—-|—-|—-|<br>|文本1|文本2|文本3|<br>|文本4|文本5|文本6|</p><h4 id="4-目录锚点"><a href="#4-目录锚点" class="headerlink" title="4.目录锚点"></a>4.目录锚点</h4><p><strong>语法：</strong></p><pre class="line-numbers language-none"><code class="language-none">[1. 目录1](#cate1)  [2. 目录2](#cate2)  [3. 目录3](#cate3) ...### &lt;span id&#x3D;&quot;cate1&quot;&gt;目录1&lt;&#x2F;span&gt;### &lt;span id&#x3D;&quot;cate2&quot;&gt;目录2&lt;&#x2F;span&gt;### &lt;span id&#x3D;&quot;cate3&quot;&gt;目录3&lt;&#x2F;span&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac配置.bash_profile,重启终端后配置失效</title>
      <link href="/2019-12-30-mac-pei-zhi-bash-profile-chong-qi-zhong-duan-hou-pei-zhi-shi-xiao.html"/>
      <url>/2019-12-30-mac-pei-zhi-bash-profile-chong-qi-zhong-duan-hou-pei-zhi-shi-xiao.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-场景"><a href="#1-场景" class="headerlink" title="1.场景"></a>1.场景</h3><p>在Mac中使用mongodb，一般都要在.bash_profile中配置一下环境变量，后面使用会比较方便一点。<br>遇到的问题状况是：配置.bash_profile后，source了一下，然后启动了mongodb，这时又新建了一个终端窗口去连接数据库，去执行mongo命令，提示:<br><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/mac-bash/1610029-20191210130742610-1488085198.png?raw=true"></p><h3 id="2-原因"><a href="#2-原因" class="headerlink" title="2.原因"></a>2.原因</h3><p>使用的终端是<code>zsh</code>，zsh加载的是<code> ~/.zshrc</code>文件，而<code>.zshrc</code>文件中并没有定义任务环境变量</p><h3 id="3-解决"><a href="#3-解决" class="headerlink" title="3.解决"></a>3.解决</h3><ol><li>终端中执行命令，打开<code>.zshrc</code>文件：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">open</span> -e ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>在<code>~/.zshrc</code>文件最后，增加一行：</li></ol><pre class="line-numbers language-none"><code class="language-none">source ~&#x2F;.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>执行命令，使其立即生效</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.zshrc <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、新建窗口，测试：</p><p><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/mac-bash/1610029-20191210132653687-1027904723.png?raw=true"></p><p>PS:</p><blockquote><p>profile（/etc/profile），用于设置系统级的环境变量和启动程序，在这个文件下配置会对所有用户生效。当用户登录（login）时，文件会被执行，并从/etc/profile.d目录的配置文件中查找shell设置。<br>一般不建议在/etc/profile文件中添加环境变量，因为在这个文件中添加的设置会对所有用户起作用。<br>bash_profile只有单一用户有效，文件存储位于~/.bash_profile，该文件是一个用户级的设置，可以理解为某一个用户的profile目录下。这个文件同样也可以用于配置环境变量和启动程序，但只针对单个用户有效。<br>和profile文件类似，bash_profile也会在用户登录（login）时生效，也可以用于设置环境变理。但与profile不同，bash_profile只会对当前用户生效。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 开发配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> zsh </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下安装和使用MongoDB（下载压缩包的方式）</title>
      <link href="/2019-12-10-mac-xia-an-zhuang-he-shi-yong-mongodb.html"/>
      <url>/2019-12-10-mac-xia-an-zhuang-he-shi-yong-mongodb.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><p>官网下载地址：<a href="https://www.mongodb.com/download-center/community">MongoDB Download Center | Community</a>. community版本可以免费使用<br><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/mac-mongo/1610029-20191210171351285-1426673461.png?raw=true"></p><p>下载完成后，将其解压后拷贝至<code>/usr/local</code>目录下。</p><blockquote><p>Tips：如何进入<code>/usr/local</code>目录？<br>打开<code>Finder</code>，快捷键<code>command+shift+G</code>，弹出弹窗，输入<code>/usr/local</code>，回车即可</p></blockquote><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h3><ul><li>打开终端窗口，输入命令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">open</span> -e ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>弹出文本编辑窗口后，在<code>.bash_profile</code>中配置<code>MongoDB</code>的环境变量</li></ul><pre class="line-numbers language-none"><code class="language-none">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;mongodb&#x2F;bin:$PATH<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/mac-mongo/1610029-20191210170148044-650070565.png?raw=true"></p><ul><li>保存后关闭窗口，使用命令使配置生效</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>使用命令测试配置是否成功</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongod -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/mac-mongo/1610029-20191210164738218-1960826067.png?raw=true"><br>成功输出版本号，说明以上步骤成功完成。如果出现<code>command not found</code>，证明配置失败，解决办法见<a href="http://localhost:4000/2019-12-30-mac-pei-zhi-bash-profile-chong-qi-zhong-duan-hou-pei-zhi-shi-xiao.html">Mac配置.bash_profile失效</a>。</p><h3 id="3-运行MongoDB"><a href="#3-运行MongoDB" class="headerlink" title="3.运行MongoDB"></a>3.运行MongoDB</h3><ul><li>在根目录下创建数据库文件夹和日志文件夹</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /database/data<span class="token function">sudo</span> <span class="token function">mkdir</span> -p /database/log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>给新建的文件夹开放权限</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> YOUR_USERNAME /database/data<span class="token function">sudo</span> <span class="token function">chown</span> YOUR_USERNAME /database/log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>配置<code>mongod.conf</code>文件<br>在 <code>/usr/local/etc/</code> 目录下新建 <code>mongod.conf</code> 文件，将上面创建的文件夹配置成<code>MongoDB</code>的数据库路径和日志路径</li></ul><pre class="line-numbers language-text" data-language="text"><code class="language-text">systemLog:    destination: file    path: /database/log/mongod.logstorage:    dbPath: ⁨/database/datanet:    bindIp: 127.0.0.1    port: 27017 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>运行MongoDB</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongod --config /usr/local/etc/mongod.conf // 如果没有创建全局路径 <span class="token environment constant">PATH</span>，需要进入以下目录<span class="token builtin class-name">cd</span> ~<span class="token builtin class-name">cd</span> /usr/local/xxx/bin   //xxx是mongodb安装包的文件夹名<span class="token function">sudo</span> ./mongod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-校验MongoDB服务"><a href="#4-校验MongoDB服务" class="headerlink" title="4.校验MongoDB服务"></a>4.校验MongoDB服务</h3><ul><li>验证mongoDB服务是否已启动<br>新打开一个终端窗口，输入以下命令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">grep</span> mongod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会显示服务启动事件和启动方式等信息。</p><ul><li>此时也可以打开浏览器，访问localhost:27017，会出现以下内容：</li></ul><pre class="line-numbers language-none"><code class="language-none">It looks like you are trying to access MongoDB over HTTP on the native driver port.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-连接数据库"><a href="#5-连接数据库" class="headerlink" title="5.连接数据库"></a>5.连接数据库</h3><p>新打开一个终端，运行以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongo// 如果没有创建全局路径 <span class="token environment constant">PATH</span>，需要进入以下目录<span class="token builtin class-name">cd</span> ~<span class="token builtin class-name">cd</span> /usr/local/xxx/bin   //xxx是mongodb安装包的文件夹名<span class="token function">sudo</span> ./mongo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>出现以下内容，证明成功连接到了数据库<br><img src="https://github.com/Snail-Lu/imageGalleries/blob/main/gh-pages/2021-10/mac-mongo/1610029-20191210170708483-925727845.png?raw=true"></p><p>如果出现<code>command not found</code>，证明配置失败，解决办法见<a href="http://localhost:4000/2019-12-30-mac-pei-zhi-bash-profile-chong-qi-zhong-duan-hou-pei-zhi-shi-xiao.html">Mac配置.bash_profile失效</a>。</p><h3 id="6-断开与数据库的连接及关闭MongoDB服务"><a href="#6-断开与数据库的连接及关闭MongoDB服务" class="headerlink" title="6.断开与数据库的连接及关闭MongoDB服务"></a>6.断开与数据库的连接及关闭MongoDB服务</h3><p>在连接数据库和启动MongoDB服务的终端窗口中按下<code>Ctrl+C</code>即可断开数据库连接及关闭MongoDB服务。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 开发配置 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6常用特性总结</title>
      <link href="/2019-10-30-es6-chang-yong-te-xing-zong-jie.html"/>
      <url>/2019-10-30-es6-chang-yong-te-xing-zong-jie.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-const、let关键字"><a href="#1-const、let关键字" class="headerlink" title="1.const、let关键字"></a>1.const、let关键字</h3><p>let用来声明一个局部变量，用法类似于var，但是它所声明的变量，只在let声明所在的块级作用域内有效。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//ReferenceError: a is not defined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>const用来声明一个只读的常量，作用域与let相同（声明所在的块级作用域），一旦定义之后不可以修改，不过如果声明的变量如果是引用类型的，可以修改它的属性。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span><span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.1415926</span><span class="token punctuation">;</span>          <span class="token comment">//TypeError: invalid assignment to const `PI'</span><span class="token keyword">const</span> <span class="token constant">PERSON</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">'Tom'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token constant">PERSON</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'Jack'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">PERSON</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//'Jack'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-函数"><a href="#2-函数" class="headerlink" title="2.函数"></a>2.函数</h3><ul><li><p>箭头函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span>num2</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//或</span><span class="token keyword">let</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span>num2</span><span class="token punctuation">)</span> <span class="token operator">=></span> num1<span class="token operator">+</span>num2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>this在箭头函数中的使用<br>箭头函数体内的this对象，是定义时所在的对象，不是使用时所在的对象。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> user <span class="token operator">=</span> <span class="token string">"Mike"</span><span class="token punctuation">;</span><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    user<span class="token operator">:</span> <span class="token string">"Tom"</span><span class="token punctuation">,</span>    <span class="token function-variable function">sayHello</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//this指向运行时所在的作用域</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span>    <span class="token comment">//this指向定义时的对象</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>person<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先后输出“hello,Mike”和“hello,Tom”</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>函数参数的默认值</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y <span class="token operator">=</span> <span class="token string">'world'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//hello,world</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>rest参数<br>rest参数（形式为…变量名）用于获取函数的多余参数，rest参数是一个数组对象，可以用于替代arguments对象。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//普通排序写法，使用arguments</span><span class="token keyword">function</span> <span class="token function">sortNumbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//使用rest参数</span><span class="token keyword">const</span> <span class="token function-variable function">sortNumbers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>numbers</span><span class="token punctuation">)</span> <span class="token operator">=></span> numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-展开操作符"><a href="#3-展开操作符" class="headerlink" title="3.展开操作符"></a>3.展开操作符</h3><ul><li><p>用于函数调用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> x<span class="token operator">+</span>y<span class="token operator">+</span>z<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//ES6之前的用法</span><span class="token function">sum</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//使用展开操作符：</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>用于数组字面量</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//es6之前的用法</span><span class="token keyword">let</span> arr3 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//[1,2,3,4,5,6]</span><span class="token comment">//展开操作符用法</span><span class="token keyword">let</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span><span class="token operator">...</span>arr2<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>对象的展开运算符</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> student <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span><span class="token string">'Tom'</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">14</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>student <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>student<span class="token punctuation">,</span>sex<span class="token operator">:</span><span class="token string">'male'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="4-模板字符串"><a href="#4-模板字符串" class="headerlink" title="4.模板字符串"></a>4.模板字符串</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">'Mike'</span><span class="token punctuation">;</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">My name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//‘My name is Mike’</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-解构语法"><a href="#5-解构语法" class="headerlink" title="5.解构语法"></a>5.解构语法</h3><ul><li><p>解构数组</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>        <span class="token comment">//按照数组序号，一一对应 a='blue',b='green',c='red'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>解构对象</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span><span class="token string">'Jack'</span><span class="token punctuation">,</span>age<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">&#123;</span>name<span class="token punctuation">,</span>age<span class="token punctuation">&#125;</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>  <span class="token comment">//与属性名一一对应 name='Jack',age=20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="6-类"><a href="#6-类" class="headerlink" title="6.类"></a>6.类</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">shout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">My name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, age is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//静态方法</span>    <span class="token keyword">static</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Here is a static method'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> cow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">'betty'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cow<span class="token punctuation">.</span><span class="token function">shout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//My name is betty, age is 2</span>Animal<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//Here is a static method</span><span class="token comment">//派生类</span><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//继承父类属性</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>color <span class="token operator">=</span> color<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//重写shout方法</span>    <span class="token function">shout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//使用super调用父类方法</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">shout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,color is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> dog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">'Bagong'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dog<span class="token punctuation">.</span><span class="token function">shout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//My name is Bagong, age is 3, color is black</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-模块"><a href="#7-模块" class="headerlink" title="7.模块"></a>7.模块</h3><ul><li>一个模块的导入/导出<br>导出文件module1.js</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"this is func1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> func1<span class="token punctuation">;</span>  <span class="token comment">//使用export导出这个模块</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>导入文件：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> func1 <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./module1.js'</span><span class="token punctuation">;</span>     <span class="token comment">//使用import导入这个模块（假设两个文件在同级目录下）</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>一个模块的多个导出<br>导出文件module1.js<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//形式1，逐个导出</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>                   <span class="token comment">//导出变量</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                  <span class="token comment">//导出方法</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"this is func1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">"Nike"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>       <span class="token comment">//导出变量</span><span class="token comment">//形式2，底部集体导出</span><span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>                   <span class="token keyword">function</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"this is func1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">"Nike"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span> <span class="token constant">PI</span><span class="token punctuation">,</span> func1<span class="token punctuation">,</span> person <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token comment">//导出的变量或方法都写在这里</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>导入文件：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//导入方式1，使用对象解构加载</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> <span class="token constant">PI</span><span class="token punctuation">,</span>func1<span class="token punctuation">,</span>person <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./module1.js'</span><span class="token punctuation">;</span><span class="token comment">//导入方式2，作为一个整体导入</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> util <span class="token keyword">from</span> <span class="token string">'./module1.js'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>util<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//3.14</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>模块的默认导出<br>导出文件module1.js<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">&#123;</span>  <span class="token comment">//默认导出</span>    <span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//默认导出的同时，也可以定义其他的非默认导出</span>    <span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>导入文件：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> importedPerson<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> func1 <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./module1.js'</span><span class="token punctuation">;</span>      <span class="token comment">//默认导出的模块不需要使用&#123;&#125;包裹,同时可以在导入处自定义名称 </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>导入导出重命名<br>导出重命名：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//导出模块文件module1.js</span><span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span> sayHi <span class="token keyword">as</span> sayHello<span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">//使用as重命名导出</span><span class="token comment">//导入文件</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> sayHello <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./module1.js'</span><span class="token punctuation">;</span> <span class="token comment">//只能通过sayHello导入</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>导入重命名：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//导出模块文件module1.js</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//导入文件</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> sayHi <span class="token keyword">as</span> sayHello <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./module1.js'</span><span class="token punctuation">;</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//只能调用sayHello,无法使用sayHi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
